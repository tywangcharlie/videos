{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxReasults","key","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","channelTitle","VideoList","videos","renderList","map","id","videoId","VideoDetail","videoSrc","description","App","selectedVideo","onTermSubmit","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"iQAoCeA,E,2MAjCXC,MAAQ,CAAEC,KAAM,I,EAEhBC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAGvCC,aAAe,SAACJ,GACZA,EAAMK,iBAEN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,wEAOnC,OACI,yBAAKS,UAAU,yBACX,0BAAMC,SAAUC,KAAKL,aAAcG,UAAU,WACzC,yBAAKA,UAAU,SACX,+CACA,2BACIG,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,uB,GAzBnBa,IAAMC,W,QCEfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNC,YAAa,EACbC,IAPI,6CCaGC,G,MAZG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxB,OACI,yBAAKC,QAAS,kBAAMD,EAAcD,IAAQf,UAAU,mBAChD,yBAAKkB,IAAKH,EAAMI,QAAQC,MAAOpB,UAAU,WAAWqB,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MACzF,yBAAKxB,UAAU,WACX,yBAAKA,UAAU,UAAUe,EAAMI,QAAQC,OACvC,yBAAKpB,UAAU,eAAee,EAAMI,QAAQM,kBCE7CC,EARG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQX,EAAoB,EAApBA,cACnBY,EAAaD,EAAOE,KAAI,SAACd,GAC3B,OAAO,kBAAC,EAAD,CAAWF,IAAKE,EAAMe,GAAGC,QAASf,cAAeA,EAAeD,MAAOA,OAGlF,OAAO,yBAAKf,UAAU,2BAA2B4B,ICctCI,EApBK,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACnB,IAAKA,EACD,OAAO,2CAGX,IAAMkB,EAAQ,wCAAoClB,EAAMe,GAAGC,SAE3D,OACI,6BACI,yBAAK/B,UAAU,YACX,4BAAQoB,MAAM,eAAeC,IAAKY,KAEtC,yBAAKjC,UAAU,cACX,wBAAIA,UAAU,aAAae,EAAMI,QAAQC,OACzC,2BAAIL,EAAMI,QAAQe,gBCmCnBC,E,2MA5CX7C,MAAQ,CAAEqC,OAAQ,GAAIS,cAAe,M,EAMrCC,a,uCAAe,WAAM9C,GAAN,eAAA+C,EAAA,sEACYC,EAAQC,IAAI,UAAW,CAC1C9B,OAAQ,CACJ+B,EAAGlD,KAHA,OACLmD,EADK,OAMX,EAAKhD,SAAS,CACViC,OAAQe,EAASC,KAAKC,MACtBR,cAAeM,EAASC,KAAKC,MAAM,KAR5B,2C,wDAYf5B,cAAgB,SAACD,GACb,EAAKrB,SAAS,CAAE0C,cAAerB,K,mFAhB/Bb,KAAKmC,aAAa,e,+BAoBlB,OACI,yBAAKrC,UAAU,gBACX,kBAAC,EAAD,CAAWH,aAAcK,KAAKmC,eAC9B,yBAAKrC,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CAAae,MAAOb,KAAKZ,MAAM8C,iBAEnC,yBAAKpC,UAAU,oBACX,kBAAC,EAAD,CACIgB,cAAed,KAAKc,cACpBW,OAAQzB,KAAKZ,MAAMqC,iB,GAnCjCtB,IAAMC,WCFxBuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.bb486861.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = { term: ''};\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ term: event.target.value });\r\n    };\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onFormSubmit(this.state.term);\r\n        // TODO: make shure we call\r\n        // callback from parent component\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-bar ui segment\">\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Video Search</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            value={this.state.term} \r\n                            onChange={this.onInputChange}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyDIiyJxeTQbgq-SBXCUGy-7dEBLKb6mqsA';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n        part: 'snippet',\r\n        maxReasults: 5,\r\n        key: KEY        \r\n    }\r\n});\r\n\r\n","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n    return (    \r\n        <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n            <img alt={video.snippet.title} className=\"ui image\" src={video.snippet.thumbnails.medium.url} />\r\n            <div className=\"content\">\r\n                <div className=\"header\">{video.snippet.title}</div>\r\n                <div className=\"description\">{video.snippet.channelTitle}</div> \r\n            </div>            \r\n        </div>                \r\n    );\r\n};\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n    const renderList = videos.map((video) => {\r\n        return <VideoItem key={video.id.videoId} onVideoSelect={onVideoSelect} video={video}/>;\r\n    });\r\n    //props.videos\r\n    return <div className=\"ui relaxed divided list\">{renderList}</div>\r\n};\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n    if (!video) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe title=\"video player\" src={videoSrc} />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n                <p>{video.snippet.description}</p>\r\n            </div>            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../apis/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\n\r\nclass App extends React.Component {\r\n    state = { videos: [], selectedVideo: null};\r\n    \r\n    componentDidMount() {\r\n        this.onTermSubmit('buildings');\r\n    }\r\n    \r\n    onTermSubmit = async term =>{\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n        this.setState({ \r\n            videos: response.data.items,\r\n            selectedVideo: response.data.items[0]\r\n        });\r\n    };\r\n\r\n    onVideoSelect = (video) => {\r\n        this.setState({ selectedVideo: video});\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ui container\">\r\n                <SearchBar onFormSubmit={this.onTermSubmit}/>\r\n                <div className=\"ui grid\">\r\n                    <div className=\"ui row\">\r\n                        <div className=\"eleven wide column\">\r\n                            <VideoDetail video={this.state.selectedVideo}/>\r\n                        </div>\r\n                        <div className=\"five wide column\">\r\n                            <VideoList \r\n                                onVideoSelect={this.onVideoSelect} \r\n                                videos={this.state.videos\r\n                            }/>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}